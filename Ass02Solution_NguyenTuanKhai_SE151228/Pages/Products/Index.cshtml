@page
@model Ass02Solution_NguyenTuanKhai_SE151228.Pages.Products.IndexModel
@if ((@HttpContextAccessor.HttpContext.Session.GetString("role") != null && @HttpContextAccessor.HttpContext.Session.GetString("role").Equals("2")) || @HttpContextAccessor.HttpContext.Session.GetString("role") == null)
{
    <h1>Products</h1>}
@if (@HttpContextAccessor.HttpContext.Session.GetString("role") != null && @HttpContextAccessor.HttpContext.Session.GetString("role").Equals("1"))
{<h1>Products Management</h1>

    <p>
        <a asp-page="Create">Create New</a><br />
        <a href="/Images" rel="noopener noreferrer" target="_blank">Images Browsing</a><br />
        <a asp-page="./Images" rel="noopener noreferrer">Images Management</a>
    </p>}

@{
    ViewData["Title"] = "Products";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<form>
    <p>
        Category:
        <select asp-for="Category" asp-items="Model.Categories">
            <option value="">All</option>
        </select>
        Supplier:
        <select asp-for="Supplier" asp-items="Model.Suppliers">
            <option value="">All</option>
        </select>
        Search by product name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Search and filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Supplier)
            </th>
            @if (@HttpContextAccessor.HttpContext.Session.GetString("role") != null && @HttpContextAccessor.HttpContext.Session.GetString("role").Equals("1"))
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Product)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityPerUnit)
                </td>
                <td>
                    <img src="@Url.Content("~/Images/" + item.ProductImage)" onerror="if (this.src != '~/images/avatar-sign.png') this.src = '~/images/avatar-sign.png';" height="100px" width="100px" />

                    @Html.DisplayFor(modelItem => item.ProductImage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.Address)
                </td>
                @if (@HttpContextAccessor.HttpContext.Session.GetString("role") != null && @HttpContextAccessor.HttpContext.Session.GetString("role").Equals("1"))
                {
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.ProductId">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.ProductId">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.ProductId">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
